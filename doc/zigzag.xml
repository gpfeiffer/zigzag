<?xml version="1.0" encoding="ISO-8859-1"?>

<!--  ZigZag Documentation
     $Id: zigzag.xml,v 1.2 2002/11/29 15:36:02 goetz Exp $
-->

<!DOCTYPE Book SYSTEM "gapdoc.dtd">

<Book Name="zigzag">
  <TitlePage>
    <Title><Package>ZigZag</Package></Title>
    <Version>Version 0.17</Version>
    <Author>
Götz Pfeiffer
<Email>goetz.pfeiffer@nuigalway.ie</Email>
<Homepage>http://schmidt.nuigalway.ie/~goetz</Homepage>
</Author>
    <Copyright>
&copyright; 2002 Department of Mathematics, NUI, Galway, Ireland
</Copyright>
  </TitlePage>

  <TableOfContents/>

  <Body>
<Chapter>
<Heading>Shapes.</Heading>

Let <M>(W, S)</M>  be a finite Coxeter system.   The <E>shape</E> of a
subset <M>J \subseteq S</M> is the set of all conjugates <M>J^w</M> of
<M>J</M> under elements <M>w \in W</M> such that <M>J^w</M> is again a
subset of  <M>S</M>.  The  name was chosen  because this concept  is a
generalization of the <E>cycle shape</E> for elements of the symmetric
group <M>S_n</M>.<P/>

The cycle shape of a  permutation <M>\alpha \in S_n</M> is a partition
of  <M>n</M>.   It  indicates  the  conjugacy  class  of  elements  of
<M>S_n</M>  that <M>\alpha</M>  lies in.   The partitions  of <M>n</M>
also  parameterize the  conjugacy  classes of  parabolic subgroups  of
<M>S_n</M>.  The most important ones  of those, the Young subgroups of
<M>S_n</M>,  are generated by  the subsets  of the  set <M>S  = \{s_1,
\dots, s_{n-1}\}</M> of standard generators <M>s_i = (i, i+1)</M>.<P/>

In a  general finite Coxeter  group, the concept of  shapes partitions
the  subsets  of  <M>S</M>  (by  definition),  the  set  of  parabolic
subgroups, and  the set of conjugacy  classes of elements  (and so the
set of elements) into classes.<P/>

Shapes are  domains, so  every set theoretic  function for a domain
can be applied to a shape (see "Set Functions for a Shape").<P/>

The functions described here are in the file <F>"shapes.g"</F>.

<Section><Heading>Shape Functions</Heading>

<ManSection>
	    
	    <Func Name="Shape" Arg="W, J"/>
<Returns>a new shape</Returns>
<Description>
This is the simple constructor for the shape class.</Description>
	  </ManSection>
<Example>
    gap> W:= CoxeterGroup("E", 6);; 
    gap> Shape(W, [1, 2, 3]);
    Shape( CoxeterGroup("E", 6), [ 1, 2, 3 ] )
</Example>
</Section>
</Chapter>
</Body>

</Book>
